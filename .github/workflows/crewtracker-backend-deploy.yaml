name: crewtracker-backend-deploy
"on":
    push:
        branches:
            - trunk
    workflow_dispatch: {}
env:
    ACR_RESOURCE_GROUP: CrewTrackerTest
    AZURE_CONTAINER_REGISTRY: acrworkflow1690924317472
    CLUSTER_NAME: CrewTracker
    CLUSTER_RESOURCE_GROUP: CrewTrackerTest
    CONTAINER_NAME: crewtracker-backend
    DEPLOYMENT_MANIFEST_PATH: |
        manifests/deployment.yaml
        manifests/service.yaml
jobs:
    buildImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - name: Build and push image to ACR
              run: az acr build --image ${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} -f Dockerfile ./
    deploy:
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - uses: azure/use-kubelogin@v1
              name: Set up kubelogin for non-interactive login
              with:
                kubelogin-version: v0.0.25
            - uses: azure/aks-set-context@v3
              name: Get K8s context
              with:
                admin: "false"
                cluster-name: ${{ env.CLUSTER_NAME }}
                resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
                use-kubelogin: "true"
            - uses: azure/k8s-create-secret@v4
              name: Create secrets
              with:
                namespace: "default"
                secret-type: "generic"
                secret-name: "smtp-host"
                data: "{smtp-host: ${{ secrets.SMTP_HOST }}}"
            - uses: Azure/k8s-deploy@v4
              name: Deploys application
              env:
                ALLOWED_ORIGINS: ${{ secrets.ALLOWED_ORIGINS }}
                AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
                AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
                AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
                AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
                AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
                AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
                AZURE_STORAGE_ENDPOINT: ${{ secrets.AZURE_STORAGE_ENDPOINT }}
                AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
                COUNTRY_CODE: ${{ secrets.COUNTRY_CODE }}
                INCOME_MARGIN: ${{ secrets.INCOME_MARGIN}}
                KEYCLOAK_BASE_URL: ${{ secrets.KEYCLOAK_BASE_URL }}
                KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
                KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET}}
                KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
                LOCATION_SEARCH_URL: ${{ secrets.LOCATION_SEARCH_URL }}
                POSTGRESQL_DB_NAME: ${{ secrets.POSTGRESQL_DB_NAME }}
                POSTGRESQL_DB_PASSWORD: ${{ secrets.POSTGRESQL_DB_PASSWORD }}
                POSTGRESQL_DB_USER: ${{ secrets.POSTGRESQL_DB_USER }}
                POSTGRESQL_HOSTNAME: ${{ secrets.POSTGRESQL_HOSTNAME }}
              with:
                action: deploy
                images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
                manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
                namespace: crewtracker-backend-service

            
                

