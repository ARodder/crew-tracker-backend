name: crewtracker-backend-deploy
"on":
    push:
        branches:
            - trunk
    workflow_dispatch: {}
env:
    ACR_RESOURCE_GROUP: CrewTrackerTest
    AZURE_CONTAINER_REGISTRY: acrworkflow1690924317472
    CLUSTER_NAME: CrewTracker
    CLUSTER_RESOURCE_GROUP: CrewTrackerTest
    CONTAINER_NAME: crewtracker-backend
    DEPLOYMENT_MANIFEST_PATH: |
        manifests/deployment.yaml
        manifests/service.yaml
jobs:
    buildImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - name: Build and push image to ACR
              run: az acr build --image ${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} -f Dockerfile ./
    deploy:
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - uses: azure/use-kubelogin@v1
              name: Set up kubelogin for non-interactive login
              with:
                kubelogin-version: v0.0.25
            - uses: azure/aks-set-context@v3
              name: Get K8s context
              with:
                admin: "false"
                cluster-name: ${{ env.CLUSTER_NAME }}
                resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
                use-kubelogin: "true"
            - uses: Azure/k8s-deploy@v4
              name: Deploys application
              with:
                action: deploy
                images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
                manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
                patch: '{"spec":{"template":{"spec":{"containers":[{"env":[ { "name": "ALLOWED_ORIGINS", "value": "${{ secrets.ALLOWED_ORIGINS }}" }, { "name": "AZURE_CLIENT_ID", "value": "${{ secrets.AZURE_CLIENT_ID }}" }, { "name": "AZURE_CLIENT_SECRET", "value": "${{ secrets.AZURE_CLIENT_SECRET }}" }, { "name": "AZURE_STORAGE_ACCOUNT_KEY", "value": "${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}" }, { "name": "AZURE_STORAGE_ACCOUNT_NAME", "value": "${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" }, { "name": "AZURE_STORAGE_CONNECTION_STRING", "value": "${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}" }, { "name": "AZURE_STORAGE_CONTAINER_NAME", "value": "${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}" }, { "name": "AZURE_STORAGE_ENDPOINT", "value": "${{ secrets.AZURE_STORAGE_ENDPOINT }}" }, { "name": "AZURE_TENANT_ID", "value": "${{ secrets.AZURE_TENANT_ID }}" }, { "name": "COUNTRY_CODE", "value": "${{ secrets.COUNTRY_CODE }}" }, { "name": "INCOME_MARGIN", "value": "${{ secrets.INCOME_MARGIN }}" }, { "name": "KEYCLOAK_BASE_URL", "value": "${{ secrets.KEYCLOAK_BASE_URL }}" }, { "name": "KEYCLOAK_CLIENT_ID", "value": "${{ secrets.KEYCLOAK_CLIENT_ID }}" }, { "name": "KEYCLOAK_CLIENT_SECRET", "value": "${{ secrets.KEYCLOAK_CLIENT_SECRET }}" }, { "name": "KEYCLOAK_REALM", "value": "${{ secrets.KEYCLOAK_REALM }}" }, { "name": "LOCATION_SEARCH_URL", "value": "${{ secrets.LOCATION_SEARCH_URL }}" }, { "name": "POSTGRESQL_DB_NAME", "value": "${{ secrets.POSTGRESQL_DB_NAME }}" }, { "name": "POSTGRESQL_DB_PASSWORD", "value": "${{ secrets.POSTGRESQL_DB_PASSWORD }}" }, { "name": "POSTGRESQL_DB_USER", "value": "${{ secrets.POSTGRESQL_DB_USER }}" }, { "name": "POSTGRESQL_HOSTNAME", "value": "${{ secrets.POSTGRESQL_HOSTNAME }}" } ]}]}}}}'
                namespace: crewtracker-backend-service

            
                

